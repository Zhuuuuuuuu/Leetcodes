class Solution {
    public int longestValidParentheses(String s) {
        if (s == null || s.length() < 2) return 0;
        int n = s.length();
        int max = 0;
        int leftmost = -1;
        Stack<Integer> stack = new Stack<Integer>();
        for(int i = 0;i < n;i++){
            if(s.charAt(i) == '('){
                stack.push(i);
            } else {
                if(stack.isEmpty()){
                    leftmost = i;
                } else {
                    int j = stack.pop();
                    if(stack.isEmpty()) max = Math.max(max , i-leftmost);
                    else max = Math.max(max, i - stack.peek());
                }
            }
        }
        return max;
    }
}
