Solution 1:非递归
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:
        pre = ListNode(0)
        pre.next = head
        temp = pre
        while temp.next and temp.next.next:
            start = temp.next
            end   = temp.next.next
            temp.next = end
            start.next = end.next
            end.next = start
            temp = start
        return pre.next


Solution 2: 递归
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:
        if not head or not head.next: return head
        current = head.next
        head.next = self.swapPairs(current.next)
        current.next = head
        return current
        
